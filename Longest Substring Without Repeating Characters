
public int lengthOfLongestSubstring(String s) {
    int n = s.length();
    Set<Character> set = new HashSet<>();
    int i = 0, j = 0, ans = 0;
    while (i < n && j < n) {
        if (set.contains(s.charAt(j))) 
        set.remove(s.charAt(i));
            i++;
        } else {
        set.add(s.charAt(j));
            j++;
            ans = Math.max(ans, j-i);
        }
    } 
    return ans;
}


public int lengthOfLongestSubString(String s) {
    int n = s.length();
    int ans = 0;
    Map<Character, Integer> map = new HashMap<>();
    for (int i = 0, j = 0; j < n; j++) {
        if (map.containsKey(s.charAt(j)) {
            i = Math.max(i, map.get(s.charAt(j)));
        }
        ans = Math.max(ans, j - i + 1);
        map.put(s.charAt(j), j+1);
    }
    
    return ans;
}
